Index: app/src/main/java/me/chipperatkins/k_9harness/DbUpdateService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/me/chipperatkins/k_9harness/DbUpdateService.java	(revision 528a88dda5c69a2d0842fd4fca51589266b3030f)
+++ app/src/main/java/me/chipperatkins/k_9harness/DbUpdateService.java	(revision a1117b6f5967d743678d3862d7a9a6b2b12cf353)
@@ -2,18 +2,19 @@
 
 import android.app.IntentService;
 import android.content.Intent;
+import android.os.Bundle;
+import android.os.ResultReceiver;
 import android.support.annotation.Nullable;
 
 import java.util.Collection;
 import java.util.Date;
 
+import javax.xml.transform.Result;
+
 /**
  * Created by patrickatkins on 10/23/17.
  */
 
-//TODO: add threshold checks here
-//TODO: raise event
-
 public class DbUpdateService extends IntentService {
     public DbUpdateService(String name) {
         super(name);
@@ -26,6 +27,7 @@
     @Override
     protected void onHandleIntent(@Nullable Intent intent) {
         StorageHandler handler = new StorageHandler();
+        ResultReceiver rec = intent.getParcelableExtra("DataUpdate");
 
         // Global logged in dog is saved in settings could be sent in through intent, merge here with scott
 
@@ -87,6 +89,38 @@
                 handler.updateHeartRate(session, now, hr);
                 handler.updateRespiratoryRate(session, now, rr);
 
+                // we stored the datapoint, send an update to the gui with the data
+                Bundle b = new Bundle();
+                b.putDouble("coreTemp", coreTemp);
+                b.putDouble("abdominalTemp", abdominalTemp);
+                b.putDouble("heartRate", hr);
+                b.putDouble("repiratoryRate", rr);
+                b.putSerializable("date", now);
+                rec.send(1, b);
+
+                // check that the datapoint does not exceed thresholds for logged in dog
+                Bundle t = new Bundle();
+                boolean thresholdExceeded = false;
+                if (dog.isOverCoreTempThreshold(coreTemp)) {
+                    b.putString("threshold", "coreTemp threshold exceeded");
+                    thresholdExceeded = true;
+                }
+                if (dog.isOverAbdominalTempThreshold(abdominalTemp)) {
+                    b.putString("threshold", "abdominalTemp threshold exceeded");
+                    thresholdExceeded = true;
+                }
+                if (dog.isOverHeartRateThreshold(hr)) {
+                    b.putString("threshold", "heartRate threshold exceeded");
+                    thresholdExceeded = true;
+                }
+                if (dog.isOverRespiratoryRateThreshold(rr)) {
+                    b.putString("threshold", "respiratoryRate threshold exceeded");
+                    thresholdExceeded = true;
+                }
+
+                if (thresholdExceeded) {
+                    rec.send(2, t);
+                }
             }
             catch (NumberFormatException nfe) {
                 // Handle data cannot be parsed here
Index: app/src/main/java/me/chipperatkins/k_9harness/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/me/chipperatkins/k_9harness/MainActivity.java	(revision 528a88dda5c69a2d0842fd4fca51589266b3030f)
+++ app/src/main/java/me/chipperatkins/k_9harness/MainActivity.java	(revision a1117b6f5967d743678d3862d7a9a6b2b12cf353)
@@ -42,27 +42,6 @@
                         .setAction("Add a note?", new AddMemoListener()).show();
             }
         });
-
-        // create a dog
-        Dog dog = new Dog("chipper");
-        dog.abdominalTempThreshold = 88.0;
-        dog.coreTempThreshold = 102.0;
-        dog.respiratoryRateThreshold = 7.0;
-        dog.heartRateThreshold = 98.0;
-
-        // store a dog
-        StorageHandler storageHandler = new StorageHandler(getApplicationContext());
-        storageHandler.storeDog(dog);
-
-        // create a session
-        Session session = new Session("chipper");
-
-        // store a session
-        storageHandler.storeSessionAndUpdateDog(session);
-
-        Intent intent = new Intent(getApplicationContext(), DbUpdateService.class);
-
-        this.startService(intent);
     }
 
     @Override
Index: app/src/main/java/me/chipperatkins/k_9harness/dataUpdateReciever.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/me/chipperatkins/k_9harness/dataUpdateReciever.java	(revision a1117b6f5967d743678d3862d7a9a6b2b12cf353)
+++ app/src/main/java/me/chipperatkins/k_9harness/dataUpdateReciever.java	(revision a1117b6f5967d743678d3862d7a9a6b2b12cf353)
@@ -0,0 +1,34 @@
+package me.chipperatkins.k_9harness;
+
+import android.os.ResultReceiver;
+import android.os.Handler;
+import android.os.Bundle;
+
+/**
+ * Created by patrickatkins on 12/7/17.
+ */
+
+public class DataUpdateReciever extends ResultReceiver {
+
+    private Receiver mReceiver;
+
+    public DataUpdateReciever(Handler handler) {
+        super(handler);
+        // TODO Auto-generated constructor sub
+    }
+
+    public interface Receiver {
+        public void onRecceiveResult(int resultCode, Bundle resultData);
+    }
+
+    public void setReceiver(Receiver receiver) {
+        mReceiver = receiver;
+    }
+
+    @Override
+    protected void onReceiveResult(int resultCode, Bundle resultData) {
+        if (mReceiver != null) {
+            mReceiver.onRecceiveResult(resultCode, resultData);
+        }
+    }
+}
